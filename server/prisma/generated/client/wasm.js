
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  email: 'email',
  contraseña: 'contraseña',
  fecha_registro: 'fecha_registro',
  fotoUrl: 'fotoUrl',
  plan: 'plan'
};

exports.Prisma.EjercicioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  categoria: 'categoria',
  imagenUrl: 'imagenUrl',
  esComun: 'esComun',
  usuarioId: 'usuarioId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RutinaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  usuarioId: 'usuarioId',
  fecha_creacion: 'fecha_creacion'
};

exports.Prisma.RutinaEjercicioScalarFieldEnum = {
  id: 'id',
  rutinaId: 'rutinaId',
  ejercicioId: 'ejercicioId',
  series: 'series',
  repeticiones: 'repeticiones',
  descansoSegundos: 'descansoSegundos',
  orden: 'orden'
};

exports.Prisma.CalendarioScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  rutinaId: 'rutinaId',
  fecha: 'fecha'
};

exports.Prisma.EntrenadorScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  especialidad: 'especialidad',
  descripcion: 'descripcion',
  experiencia: 'experiencia',
  precio: 'precio',
  fotoUrl: 'fotoUrl',
  disponible: 'disponible',
  calificacion: 'calificacion',
  certificaciones: 'certificaciones'
};

exports.Prisma.ContratacionScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  entrenadorId: 'entrenadorId',
  fechaInicio: 'fechaInicio',
  fechaFin: 'fechaFin',
  estado: 'estado',
  planSeleccionado: 'planSeleccionado',
  precio: 'precio'
};

exports.Prisma.ChallengeScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  descripcion: 'descripcion',
  activo: 'activo',
  fechaInicio: 'fechaInicio',
  fechaFin: 'fechaFin',
  participantes: 'participantes',
  nivel: 'nivel',
  tipo: 'tipo',
  objetivos: 'objetivos',
  recompensa: 'recompensa',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserChallengeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  challengeId: 'challengeId',
  progreso: 'progreso',
  completado: 'completado',
  fechaInicio: 'fechaInicio',
  ultimoProgreso: 'ultimoProgreso'
};

exports.Prisma.AchievementScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  descripcion: 'descripcion',
  tipo: 'tipo',
  icono: 'icono',
  criterio: 'criterio',
  valorNecesario: 'valorNecesario'
};

exports.Prisma.UserAchievementScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  achievementId: 'achievementId',
  fechaConseguido: 'fechaConseguido'
};

exports.Prisma.ComentarioScalarFieldEnum = {
  id: 'id',
  texto: 'texto',
  usuarioId: 'usuarioId',
  rutinaId: 'rutinaId',
  creadoEn: 'creadoEn'
};

exports.Prisma.MetricScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  tipo: 'tipo',
  valor: 'valor',
  fecha: 'fecha'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Usuario: 'Usuario',
  Ejercicio: 'Ejercicio',
  Rutina: 'Rutina',
  RutinaEjercicio: 'RutinaEjercicio',
  Calendario: 'Calendario',
  Entrenador: 'Entrenador',
  Contratacion: 'Contratacion',
  Challenge: 'Challenge',
  UserChallenge: 'UserChallenge',
  Achievement: 'Achievement',
  UserAchievement: 'UserAchievement',
  Comentario: 'Comentario',
  Metric: 'Metric'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
